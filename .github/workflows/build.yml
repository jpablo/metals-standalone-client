name: Build and Release

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    name: Build on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        include:
          - os: ubuntu-latest
            artifact-name: metals-standalone-client-linux
            executable-path: target/universal/stage/bin/metals-standalone-client
          - os: macos-latest
            artifact-name: metals-standalone-client-macos
            executable-path: target/universal/stage/bin/metals-standalone-client
          - os: windows-latest
            artifact-name: metals-standalone-client-windows
            executable-path: target/universal/stage/bin/metals-standalone-client.bat

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Cache SBT dependencies
      uses: actions/cache@v4
      with:
        path: |
          ~/.sbt
          ~/.ivy2/cache
          ~/.coursier/cache
        key: ${{ runner.os }}-sbt-${{ hashFiles('**/build.sbt', 'project/**/*.scala', 'project/**/*.sbt') }}
        restore-keys: |
          ${{ runner.os }}-sbt-

    - name: Run tests
      run: sbt test

    - name: Build application
      run: sbt stage

    - name: Verify executable exists
      shell: bash
      run: |
        if [[ "${{ matrix.os }}" == "windows-latest" ]]; then
          ls -la target/universal/stage/bin/metals-standalone-client.bat
        else
          ls -la target/universal/stage/bin/metals-standalone-client
        fi

    - name: Create artifact directory
      shell: bash
      run: |
        mkdir -p artifacts
        if [[ "${{ matrix.os }}" == "windows-latest" ]]; then
          cp target/universal/stage/bin/metals-standalone-client.bat artifacts/
          cp -r target/universal/stage/lib artifacts/
        else
          cp target/universal/stage/bin/metals-standalone-client artifacts/
          cp -r target/universal/stage/lib artifacts/
        fi

    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.artifact-name }}
        path: artifacts/
        retention-days: 30

  release:
    name: Create Release
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Download all artifacts
      uses: actions/download-artifact@v4
      with:
        path: release-artifacts

    - name: Create release packages
      run: |
        cd release-artifacts
        
        # Package Linux version
        cd metals-standalone-client-linux
        tar -czf ../metals-standalone-client-linux.tar.gz *
        cd ..
        
        # Package macOS version  
        cd metals-standalone-client-macos
        tar -czf ../metals-standalone-client-macos.tar.gz *
        cd ..
        
        # Package Windows version
        cd metals-standalone-client-windows
        zip -r ../metals-standalone-client-windows.zip *
        cd ..

    - name: Generate release tag
      id: tag
      run: |
        TIMESTAMP=$(date +%Y%m%d-%H%M%S)
        COMMIT_SHORT=$(git rev-parse --short HEAD)
        TAG="build-${TIMESTAMP}-${COMMIT_SHORT}"
        echo "tag=${TAG}" >> $GITHUB_OUTPUT

    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ steps.tag.outputs.tag }}
        name: "Build ${{ steps.tag.outputs.tag }}"
        body: |
          Automated build from commit ${{ github.sha }}
          
          ## Download Instructions
          
          ### Linux/macOS
          ```bash
          # Download and extract
          wget https://github.com/jpablo/metals-standalone-client/releases/download/${{ steps.tag.outputs.tag }}/metals-standalone-client-linux.tar.gz
          tar -xzf metals-standalone-client-linux.tar.gz
          
          # Make executable and run
          chmod +x metals-standalone-client
          ./metals-standalone-client --help
          ```
          
          ### Windows
          ```cmd
          # Download metals-standalone-client-windows.zip
          # Extract and run
          metals-standalone-client.bat --help
          ```
          
          Built with:
          - Scala 3.7.1
          - SBT 1.11.2
          - Java 17
        files: |
          release-artifacts/metals-standalone-client-linux.tar.gz
          release-artifacts/metals-standalone-client-macos.tar.gz
          release-artifacts/metals-standalone-client-windows.zip
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}